mainmodule hello {
  mainchare Main {
    entry [nokeep] Main(CkArgMsg*);
    entry [threaded] void run(void);
    entry void done(CkMessage*);
  };

  extern module completion;

  nodegroup location_manager {
    entry location_manager();

    entry void reg_array(const CProxy_CompletionDetector&, const CkArrayID&, const CkCallback&);
    entry void unreg_array(const CkArrayID&, const CkCallback&);

    entry void receive_upstream(const int&, const CkArrayID&, const CkArrayIndex&);
    entry void receive_downstream(const int&, const CkArrayID&, const CkArrayIndex&);

    entry void make_endpoint(const CkArrayID&, const CkArrayIndex&);

    entry void begin_inserting(const CkArrayID &aid, const CkCallback &start, const CkCallback &finish);
    entry void done_inserting(const CkArrayID&);

    entry void insertion_complete_(const CkArrayID&, const CkCallback&);
  };

  readonly CProxy_Main mainProxy;
  readonly CProxy_location_manager locProxy;

  include "manageable.hh";

  extern module locality;

  array [Max] Test : locality_base_ {
    entry Test(void);
    entry Test(association_ptr_, const reduction_id_t&);
    entry void make_contribution();
  };

  initproc void enroll_polymorphs(void);
}
